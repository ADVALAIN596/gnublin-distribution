#!/bin/bash

# Wrapper Script for reading values from the internal lpc3131 pwm controller
# Author: Benedikt Niedermayr (niedermayr@embedded-projects.net)
# Version 1.0
# embedded projects GmbH

# This program (including documentation) is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied
# warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License version 3 (GPLv3; http://www.gnu.org/licenses/gpl-3.0.html ) for more details.



value_length=""
value=""
test1=""
string='

Module automaticly loaded'
devfile="/dev/lpc313x_pwm"
helpstring='This wrapper Script controls the pwm interface of GNUBLIN 

-h			Show this help
-j			print output in json format.
-d			Choose Path to device file.
-v 			Hex-value for pwm duty cycle in. <high-byte><low-byte>

Example:
gnublin-pwm -v ff     <- this command starts the pwm interface with specified value.'


# check if script was called with parameters
if [ "$#" = "0" ]
then 
   echo "Keine Parameter übergeben. -h für Hilfe"
   exit 1
fi 


while getopts d:v:hj opt
 do
      case $opt in
          d) devfile="${OPTARG}" ;;
   	  v) value="${OPTARG}" ;;
          ?) echo "$helpstring"
             exit 1 ;;
	  h) echo "$helpstring"
             exit 1 ;;
      esac
done

#modul autoload
lsmod | grep "lpc313x_pwm"  >/dev/null

if [ "$?" == "1" ]
then
	modprobe lpc313x_pwm
	echo $string
fi 


#check device-file
if [ ! -c $devfile ]
then
	if [ "$json_f" == "1" ]
	then
	    echo "{ \"result\" : \"File: $devfile was not found\" }"
	else
	echo "File: $devfile was not found"
        fi
	exit 1
fi



value_length=${#value}
if [ "$value_length" != "2" ]
then 
	if [ "$json_f" == "1" ]
	then
	    echo "{ \"result\" : \"Number of digits in expression value isn't correct!\" }"
	else
	echo "Number of digits in expression value isn't correct!"
	fi
	exit 1
fi



echo $value | grep -E "[^0-9a-fA-F]"
if [ "$?" == "0" ]; 
then
	if [ "$json_f" == "1" ]
	then
	    echo "{ \"result\" : \"Value must be between 00 and ff.\" }"
	else
        echo "Value must be between 00 and ff."
	fi
    exit 1
fi

#activate pwm
echo "$value" > $devfile
	if [ "$json_f" == "1" ]
	then
	    echo "{ \"result\" : \"PWM successfully activated.\" }"
	else
        echo "PWM successfully activated."
	fi






