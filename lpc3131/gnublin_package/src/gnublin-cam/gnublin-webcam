 #!/bin/bash

# Wrapper Script for using a Webcam connected to the Gnublin-Board. 
# Author: Eduard Tasnadi-Olescher (tasnadi@embedded-projects.net)
# Version 1.0
# embedded projects GmbH

# This program (including documentation) is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied
# warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License version 3 (GPLv3; http://www.gnu.org/licenses/gpl-3.0.html ) for more details.


result=""
resolution="800x600"
device="/dev/video0"
port="8080"
modus=""
filename="out.jpg"
daemon=""
json_f=""
helpstring='This script is designed, to easily take pictures from a webcam, or to start a webstream.   
-h			Show this help
-j			Convert output to json format
-i <filename>		take a picture and save it with given filename.
-r <resolution>		set resolution of the snapshot or the stream.(default=800x600)
-s			start a webstream
-b			start a webstream in the background.
-p <value>		set the port of the webstream.(default=8080)
-d <device>		set the device.(default=/dev/video0)

Example:
gnublin-cam -i out.jpg     <- Take a picture and save it to file out.jpg.
gnublin-cam -s -r 640x480  <- start a webstream with resolution=640x480.
gnublin-cam -s -p 5555     <- start a webstream on port 5555.
gnublin-cam -b             <- start a webstream in the background.'




while getopts p:jhsd:r:i: opt
 do
      case $opt in
          p) port="${OPTARG}" ;;
          i) modus="image" 
             filename="${OPTARG}";;
          r) resolution="${OPTARG}" ;;
          d) device="${OPTARG}" ;;
          s) modus="stream" ;;
          b) modus="stream" 
             daemon="&";;
	  j) json_f="1" ;;
          ?) echo "$helpstring"
             exit 1 ;;
          h) echo "$helpstring"
             exit 1 ;;
      esac
done


#first check if the module is loaded
lsmod | grep "uvcvideo"  >/dev/null
if [ "$?" != "0" ]
then
      if [ "$json_f" == "1" ]
      then
      echo "{ \"result\" : \"Webcam not connected or module uvcvideo not loaded\" }"
      else
      echo "Webcam not connected or module uvcvideo not loaded"
      fi
      exit 1
fi


#split resolution into resx and resy
if [ "${resolution:3:1}" = "x" -o "${resolution:3:1}" = "X" ]
then 
	resx="${resolution:0:3}"
	resy="${resolution:4}"

elif [ "${resolution:4:1}" = "x" -o "${resolution:4:1}" = "X" ]
then 
	resx="${resolution:0:4}"
	resy="${resolution:5}"

else
	resx="800"
	resx="600"
fi



#now check the modus and start the stream or take a picture#
############################################################

#snaphot mode
if [ "$modus" == "image" ]
then

	uvccapture -x $resx -y $resy -d $device -o $filename

      if [ "$json_f" == "1" ]
      then
      echo "{ \"result\" : \"Picture $filename successfully taken.\" }"
      else
      echo "Picture $filename successfully taken."
      fi

#stream mode
elif [ "$modus" == "stream" ]
then

	mjpg_streamer -i "/lib/input_uvc.so -d $device  -r $resolution" -o "/lib/output_http.so -p $port -w /usr/www -n" $daemon

else
      if [ "$json_f" == "1" ]
      then
      echo "{ \"result\" : \"No mode selected.\" }"
      else
      echo "No mode selected. Please specify a mode with -s, -b or -i."
      fi
      exit 1
fi



