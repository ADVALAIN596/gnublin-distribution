#!/bin/bash

# Wrapper Script for reading values from the ads7828 module
# Author: Benedikt Niedermayr (niedermayr@embedded-projects.net)
# Version 1.0
# embedded projects GmbH

# This program (including documentation) is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied
# warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License version 3 (GPLv3; http://www.gnu.org/licenses/gpl-3.0.html ) for more details.


channel=""
result=""
error=""
i2cbus="1"
address="0x48"
json_f="0"
brute_f="0"
init_f="0"
rm_f="0"
helpstring='This Script prints out the value of a selected adc-channel of the gnublin-adc-module 

-h Show this help
-b show raw output
-j Convert output to json format
-i just initialize the adc module with given address (default is 0x48)
-r just remove the adc driver.
-c Select ADC Channel (0 - 7 possible, default is 0)
-a I2C-Address of the module (default is 0x48)

Example:

channel=2, I2C-Address=0x48 print value in json format:
gnublin-adcmod -j -a 0x48 -c 2  

channel=7, I2C-Address=0x4A print value in normal format:
gnublin-adcmod -a 0x4A -c 7'


check_channel() {
	if [ "$1" -gt "7" ]
	then

			if [ "$json_f" == "1" ]
			then
			    echo "{ \"error_msg\" : \"channel is not valid\",\"result\" : \"-1\" }"
			else
			echo "channel is not valid"
			fi
			exit 1
	fi 
}




#parse the parameters
while getopts c:a:jhbir opt
 do
      case $opt in
          c) channel="${OPTARG}" ;;

	  a) address="${OPTARG}" ;;
          j) json_f="1" ;;
	  b) brute_f="1" ;;
	  i) init_f="1" ;;
	  r) rm_f="1" ;;
          ?) echo "$helpstring"
             exit 1 ;;
	  h) echo "$helpstring"
             exit 1 ;;
      esac
done

    if [ $rm_f == "1" ]
    then
	modprobe -r ads7828 >/dev/null
	exit 1
    fi 


#check if adress is a hex-value
if [  "${address:0:2}" != "0x" ]
then
    result="I2C-address is not a hex-value."
    if [ "$json_f" == "1" ]
    then
        echo "{ \"error_msg\" : \"$result\",\"result\" : \"-2\" }"
    else
        echo $result
    fi
    exit 1
fi


#module autoload
lsmod | grep "ads7828"  >/dev/null
if [ "$?" == "1" ]
then

    if [ $init_f == "1" ]
    then
	modprobe ads7828 >/dev/null
	exit 1
    else
	modprobe ads7828 >/dev/null
	sleep 1
    fi 
fi

#check for parameter problems
check_channel $channel

#check if channel_value is an integer
if [ "${channel//[0-9]*}" != "" ] 
then
		if [ "$json_f" == "1" ]
		then
			echo "{ \"error_msg\" : \"Only Integers allowed for channel\",\"result\" : \"-3\" }"
		else
		echo "Only Integers allowed for channel"
		fi
   exit 1
fi

#read the value
if [ -f /sys/module/ads7828/drivers/i2c:ads7828/${i2cbus}-00${address:2}/in${channel}_input ]
then
#get the value of the selected adc channel
result=$(cat "/sys/module/ads7828/drivers/i2c:ads7828/${i2cbus}-00${address:2}/in${channel}_input" 2>/dev/null) 

	#print result in normal format or in json format
	if [ "$json_f" == "1" ]
	then
	    echo "{ \"voltage\" : \"$result\",\"result\" : \"0\" }"
	else
    echo $result
	fi 
else 

	#print result in normal format or in json format
	error="File not found. Please use the correct I2C-address or connect the adc-module.You can also try to load/reload the module ads7828"
	if [ "$json_f" == "1" ]
	then
	    echo "{ \"error_msg\" : \"$error\",\"result\" : \"-4\" }"
	else
	    echo $error
	fi 
fi






