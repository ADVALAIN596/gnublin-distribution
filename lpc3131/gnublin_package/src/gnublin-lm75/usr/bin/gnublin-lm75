 #!/bin/bash


# This script is reading out the temperature(s) of one or more LM75 temperature sensors connected to the GNUBLIN Board.
# Author: Eduard Tasnadi-Olescher (tasnadi@embedded-projects.net)
# Version 1.0
# embedded projects GmbH

# This program (including documentation) is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied
# warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License version 3 (GPLv3; http://www.gnu.org/licenses/gpl-3.0.html ) for more details.



address="0x4f"
result=""
i2cbus="1"
json_f="0"
helpstring='This script is reading out the temperature(s) of one or more LM75 temperature sensor(s).

The correct syntax for this script is: gnublin-lm75 [Option..]       

-h 			print this helptext
-j 			convert output to json compatible format
-a <address> 		LM75 sensor I2CAddress.<address> must be a hex-value.default=0x48


Examples:
gnublin-lm75 -j -a 0x49 <-read temperature.I2CAddress=0x49. print value in json format.
gnublin-lm75            <-read temperature.default I2CAddress=0x48. print the value.

'

while getopts a:jh opt
 do
      case $opt in

          a) address="${OPTARG}" ;;
          j) json_f="1" ;;
          h) echo "$helpstring"; exit 1 ;;
          ?) echo "For more information please use -h";
             exit 1;;
      esac
done


#check if adress is a hex-value
if [  "${address:0:2}" != "0x" ]
then
    result="I2C-address is not a hex-value."
    if [ "$json_f" == "1" ]
    then
        echo "{ \"result\" : \"$result\" }"
    else
        echo $result
    fi
    exit 1
fi

#read the result with i2cget
result=$(i2cget -y ${i2cbus} ${address})

#exit if something went wrong while reading the temperature
if [ "$?" != "0" ]
then
    result="I2C-address is wrong or lm75 hardware-module is not connected."
    if [ "$json_f" == "1" ]
    then
        echo "{ \"result\" : \"$result\" }"
    else
        echo $result
    fi
    exit 1
fi


#convert the result from hex to dec
result=$(printf "%d\n" $result)

#output the result in normal form or json compatible format
if [ "$json_f" == "1" ]
then
    echo "{ \"result\" : \"$result\" }"
else
    echo "$result "
fi 

