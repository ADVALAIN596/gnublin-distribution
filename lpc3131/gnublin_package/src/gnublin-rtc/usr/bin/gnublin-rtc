  #!/bin/bash

# Wrapper Script for using a Webcam connected to the Gnublin-Board. 
# Author: Eduard Tasnadi-Olescher (tasnadi@embedded-projects.net)
# Version 1.0
# embedded projects GmbH

# This program (including documentation) is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied
# warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License version 3 (GPLv3; http://www.gnu.org/licenses/gpl-3.0.html ) for more details.


result=""
modus=""
date=""
json_f=""
helpstring='This script is designed, to easily interact with a RTC connected to the GNUBLIN.   
-h			Show this help
-j			Convert output to json format
-s <Date>		Set the RTC to specified <Date> = "YYYY/MM/DD HH:MM:SS"
-g			Read the Time from the RTC.
-x			Set Linux date to RTCs date.


Example:
gnublin-rtc -g                        <- Read the Time from the RTC.
gnublin-rtc -s "2013/01/20 16:16:16"  <- Set the RTC to specified date.
gnublin-rtc -x                        <- Set Linux time to date read from RTC.'




while getopts s:jhsgx opt
 do
      case $opt in
          s) date="${OPTARG}" 
             modus="set" ;;
          g) modus="get" ;;
          x) modus="sync" ;;
	  j) json_f="1" ;;
          ?) echo "$helpstring"
             exit 1 ;;
          h) echo "$helpstring"
             exit 1 ;;
      esac
done


#first check if the module is loaded, if not load it automaticly
lsmod | grep "mcp7940"  >/dev/null
if [ "$?" != "0" ]
then

 echo mcp7940 0x6f > /sys/bus/i2c/devices/i2c-1/new_device
 modprobe rtc-mcp7940
 sleep 2

fi

#check if device-file /dev/rtc0 exists
ls /dev/rtc0 >/dev/null
if [ "$?" != "0" ]
then
      if [ "$json_f" == "1" ]
      then
      echo "{ \"error_msg\" : \"Device-file /dev/rtc0 not found\",\"result\" : \"-1\" }"
      else
      echo "Device-file /dev/rtc0 not found. Please connect the RTC to the GNUBLIN."
      fi
      exit 1
fi




#check the selected mode
if [ "$modus" == "get" ]
then

      result=$(hwclock -r)
      if [ "$json_f" == "1" ]
      then
      echo "{ \"date\" : \"$result\",\"result\" : \"0\" }"
      else
      echo "$result"
      fi

elif [ "$modus" == "set" ]
then


   #check if given date is in correct format
   if [ "${date:4:1}" == "/" -a "${date:7:1}" == "/" -a "${date:13:1}" == ":" -a "${date:16:1}" == ":" ]
   then
     
      #if date is correct set the date on RTC
      hwclock --set --date "$date"
      if [ "$json_f" == "1" ]
      then
      echo "{ \"result\" : \"0\" }"
      else
      echo "RTC date set to $date."
      fi
   else
      #if date is not in correct format print an error.
      if [ "$json_f" == "1" ]
      then
      echo "{ \"error_msg\" : \"Date not in correct format.\",\"result\" : \"-2\" }"
      else
      echo "Date not in correct format. -> YYYY/MM/DD HH:MM:SS "     
      exit 1
      fi
   fi

elif [ "$modus" == "sync" ]
then

      hwclock --hctosys
      if [ "$json_f" == "1" ]
      then
      echo "{ \"result\" : \"0\" }"
      else
      echo "Linux date set to RTCs date."
      fi

fi